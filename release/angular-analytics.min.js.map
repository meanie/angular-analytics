{"version":3,"sources":["analytics.service.js"],"names":["angular","isEnabled","this","$get","$window","q","Date","eventValue","value","timingLabel","label","ga","Analytics"],"mappings":"iBAKAA,oFAgBIC,WAAKA,8BAMPC,KAAKC,YAAAA,8FASAC,EAAWC,KAAID,8EAQZH,GAAAA,EAAAA,OAAW,IAAAK,4tCAwNTC,SAAYC,EAAAA,EAAAA,EAAAA,uRAoCZC,SAAaC,EAAAA,EAAAA,EAAAA,sQAyCrBC,EAAOC","file":"angular-analytics.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Analytics.Service', [])\n\n/**\n * Provider definition\n */\n.provider('$analytics', function AnalyticsProvider() {\n\n  /**\n   * Enabled flag\n   */\n  this.isEnabled = true;\n\n  /**\n   * Set default data\n   */\n  this.setEnabled = function(isEnabled) {\n    this.isEnabled = !!isEnabled;\n  };\n\n  /**\n   * Service getter\n   */\n  this.$get = function($window, $location) {\n\n    //Check if enabled\n    let isEnabled = this.isEnabled;\n\n    /**\n     * Initialize google analytics queue\n     */\n    $window.ga = $window.ga || function() {\n      ($window.ga.q = $window.ga.q || []).push(arguments);\n    };\n    $window.ga.l = Number(new Date());\n\n    /**\n     * GA wrapper function\n     */\n    function ga() {\n      if (isEnabled) {\n        $window.ga.apply(undefined, arguments);\n      }\n    }\n\n    /**\n     * Class definition\n     */\n    let Analytics = {\n\n      /**\n       * Enable analytics in realtime\n       */\n      enable() {\n        isEnabled = true;\n      },\n\n      /**\n       * Disable analytics in realtime\n       */\n      disable() {\n        isEnabled = false;\n      },\n\n      /**\n       * Check if enabled\n       */\n      isEnabled() {\n        return isEnabled;\n      },\n\n      /**\n       * Create interface\n       */\n      create(trackingId, name, config) {\n        ga('create', angular.extend({\n          trackingId: trackingId,\n          cookieDomain: 'auto',\n          name: name,\n        }, config || {}));\n      },\n\n      /**\n       * Require interface\n       */\n      require(item) {\n        ga('require', item);\n      },\n\n      /**\n       * Set interface\n       */\n      set: {\n\n        /**\n         * Set app name\n         */\n        appName(name) {\n          ga('set', 'appName', name);\n        },\n\n        /**\n         * Set app ID\n         */\n        appId(id) {\n          ga('set', 'appId', id);\n        },\n\n        /**\n         * Set app version\n         */\n        appVersion(version) {\n          ga('set', 'appVersion', version);\n        },\n\n        /**\n         * Set user ID\n         */\n        userId(userId) {\n          ga('set', 'userId', userId);\n        },\n\n        /**\n         * Set data source\n         */\n        dataSource(dataSource) {\n          ga('set', 'dataSource', dataSource);\n        },\n\n        /**\n         * Set screen name\n         */\n        screenName(screenName) {\n          ga('set', 'screenName', screenName);\n        },\n\n        /**\n         * Set document title\n         */\n        documentTitle(title) {\n          ga('set', 'title', title);\n        },\n\n        /**\n         * Set hostname\n         */\n        hostname(hostname) {\n          ga('set', 'hostname', hostname);\n        },\n\n        /**\n         * Set page\n         */\n        page(page) {\n          page = page || $location.url();\n          ga('set', 'page', page);\n        },\n\n        /**\n         * Campaign name\n         */\n        campaignName(name) {\n          ga('set', 'campaignName', name);\n        },\n\n        /**\n         * Campaign ID\n         */\n        campaignId(id) {\n          ga('set', 'campaignId', id);\n        },\n\n        /**\n         * Campaign source\n         */\n        campaignSource(source) {\n          ga('set', 'campaignSource', source);\n        },\n\n        /**\n         * Campaign medium\n         */\n        campaignMedium(medium) {\n          ga('set', 'campaignMedium', medium);\n        },\n\n        /**\n         * Campaign keyword\n         */\n        campaignKeyword(keyword) {\n          ga('set', 'campaignKeyword', keyword);\n        },\n\n        /**\n         * Campaign content\n         */\n        campaignContent(content) {\n          ga('set', 'campaignContent', content);\n        },\n\n        /**\n         * Set user language\n         */\n        language(language) {\n          ga('set', 'language', language);\n        },\n\n        /**\n         * Set document encoding\n         */\n        encoding(encoding) {\n          ga('set', 'encoding', encoding);\n        },\n\n        /**\n         * Anonymize sender's IP address\n         */\n        anonymizeIp(anonymizeIp) {\n          ga('set', 'anonymizeIp', !!anonymizeIp);\n        },\n      },\n\n      /**\n       * Tracking interface\n       */\n      track: {\n\n        /**\n         * Register a pageview\n         */\n        pageview(page) {\n          ga('send', {\n            hitType: 'pageview',\n            page: page || $location.url(),\n          });\n        },\n\n        /**\n         * Register a screenview\n         */\n        screenview(screenName) {\n          ga('send', {\n            hitType: 'screenview',\n            screenName: screenName,\n          });\n        },\n\n        /**\n         * Register an event\n         */\n        event(category, action, label, value) {\n          ga('send', {\n            hitType: 'event',\n            eventCategory: category,\n            eventAction: action,\n            eventLabel: label,\n            eventValue: value,\n          });\n        },\n\n        /**\n         * Register a social hit\n         */\n        social(network, action, target) {\n          ga('send', {\n            hitType: 'social',\n            socialNetwork: network,\n            socialAction: action,\n            socialTarget: target,\n          });\n        },\n\n        /**\n         * Register an exception\n         */\n        exception(description, isFatal) {\n          ga('send', {\n            hitType: 'exception',\n            exDescription: description,\n            exFatal: !!isFatal,\n          });\n        },\n\n        /**\n         * Register a timing hit\n         */\n        timing(category, variable, value, label) {\n          ga('send', {\n            hitType: 'timing',\n            timingCategory: category,\n            timingVar: variable,\n            timingValue: value,\n            timingLabel: label,\n          });\n        },\n      },\n\n      /**\n       * E-commerce interface\n       */\n      ecommerce: {\n\n        /**\n         * Add transaction\n         */\n        addTransaction(data) {\n          ga('ecommerce:addTransaction', data);\n        },\n\n        /**\n         * Add item\n         */\n        addItem(data) {\n          ga('ecommerce:addItem', data);\n        },\n\n        /**\n         * Send\n         */\n        send() {\n          ga('ecommerce:send');\n        },\n\n        /**\n         * Clear\n         */\n        clear() {\n          ga('ecommerce:clear');\n        },\n      },\n    };\n\n    //Return\n    return Analytics;\n  };\n});\n\n})(window, window.angular);\n"]}
{"version":3,"sources":["meanie-angular-analytics.min.js","analytics.service.js"],"names":["window","angular","undefined","module","provider","this","isEnabled","setEnabled","$get","$window","$location","ga","_isEnabled","apply","arguments","q","push","Date","enable","disable","create","trackingId","name","config","extend","cookieDomain","require","item","set","appName","appId","id","appVersion","version","userId","_userId","dataSource","_dataSource","screenName","_screenName","documentTitle","title","hostname","_hostname","page","_page","url","campaignName","campaignId","campaignSource","source","campaignMedium","medium","campaignKeyword","keyword","campaignContent","content","language","_language","encoding","_encoding","anonymizeIp","_anonymizeIp","track","pageview","hitType","screenview","event","eventValue","value","eventCategory","category","eventAction","action","eventLabel","label","social","network","target","socialNetwork","socialAction","socialTarget","exception","description","isFatal","exDescription","exFatal","timing","timingLabel","timingCategory","timingVar","variable","timingValue","ecommerce","addTransaction","affiliation","revenue","shipping","tax","currency","addItem","price","quantity","sku","send","clear","Analytics"],"mappings":"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","file":"meanie-angular-analytics.min.js","sourcesContent":["/**\n * meanie-angular-analytics * https://github.com/meanie/angular-analytics\n *\n * Copyright (c) 2017 Adam Reis <adam@reis.nz>\n * License: MIT\n */\n(function (window, angular, undefined) {\n  'use strict';\n\n  /**\n   * Module definition and dependencies\n   */\n\n  angular.module('Analytics.Service', [])\n\n  /**\n   * Provider definition\n   */\n  .provider('$analytics', function AnalyticsProvider() {\n\n    /**\n     * Enabled flag\n     */\n    this.isEnabled = true;\n\n    /**\n     * Set default data\n     */\n    this.setEnabled = function (isEnabled) {\n      this.isEnabled = !!isEnabled;\n    };\n\n    /**\n     * Service getter\n     */\n    this.$get = ['$window', '$location', function ($window, $location) {\n\n      //Check if enabled\n      var _isEnabled = this.isEnabled;\n\n      /**\n       * Initialize google analytics queue\n       */\n      $window.ga = $window.ga || function () {\n        ($window.ga.q = $window.ga.q || []).push(arguments);\n      };\n      $window.ga.l = Number(new Date());\n\n      /**\n       * GA wrapper function\n       */\n      function ga() {\n        if (_isEnabled) {\n          $window.ga.apply(undefined, arguments);\n        }\n      }\n\n      /**\n       * Class definition\n       */\n      var Analytics = {\n\n        /**\n         * Enable analytics in realtime\n         */\n        enable: function enable() {\n          _isEnabled = true;\n        },\n\n\n        /**\n         * Disable analytics in realtime\n         */\n        disable: function disable() {\n          _isEnabled = false;\n        },\n\n\n        /**\n         * Check if enabled\n         */\n        isEnabled: function isEnabled() {\n          return _isEnabled;\n        },\n\n\n        /**\n         * Create interface\n         */\n        create: function create(trackingId, name, config) {\n          ga('create', angular.extend({\n            trackingId: trackingId,\n            cookieDomain: 'auto',\n            name: name\n          }, config || {}));\n        },\n\n\n        /**\n         * Require interface\n         */\n        require: function require(item) {\n          ga('require', item);\n        },\n\n\n        /**\n         * Set interface\n         */\n        set: {\n\n          /**\n           * Set app name\n           */\n          appName: function appName(name) {\n            ga('set', 'appName', name);\n          },\n\n\n          /**\n           * Set app ID\n           */\n          appId: function appId(id) {\n            ga('set', 'appId', id);\n          },\n\n\n          /**\n           * Set app version\n           */\n          appVersion: function appVersion(version) {\n            ga('set', 'appVersion', version);\n          },\n\n\n          /**\n           * Set user ID\n           */\n          userId: function userId(_userId) {\n            ga('set', 'userId', _userId);\n          },\n\n\n          /**\n           * Set data source\n           */\n          dataSource: function dataSource(_dataSource) {\n            ga('set', 'dataSource', _dataSource);\n          },\n\n\n          /**\n           * Set screen name\n           */\n          screenName: function screenName(_screenName) {\n            ga('set', 'screenName', _screenName);\n          },\n\n\n          /**\n           * Set document title\n           */\n          documentTitle: function documentTitle(title) {\n            ga('set', 'title', title);\n          },\n\n\n          /**\n           * Set hostname\n           */\n          hostname: function hostname(_hostname) {\n            ga('set', 'hostname', _hostname);\n          },\n\n\n          /**\n           * Set page\n           */\n          page: function page(_page) {\n            _page = _page || $location.url();\n            ga('set', 'page', _page);\n          },\n\n\n          /**\n           * Campaign name\n           */\n          campaignName: function campaignName(name) {\n            ga('set', 'campaignName', name);\n          },\n\n\n          /**\n           * Campaign ID\n           */\n          campaignId: function campaignId(id) {\n            ga('set', 'campaignId', id);\n          },\n\n\n          /**\n           * Campaign source\n           */\n          campaignSource: function campaignSource(source) {\n            ga('set', 'campaignSource', source);\n          },\n\n\n          /**\n           * Campaign medium\n           */\n          campaignMedium: function campaignMedium(medium) {\n            ga('set', 'campaignMedium', medium);\n          },\n\n\n          /**\n           * Campaign keyword\n           */\n          campaignKeyword: function campaignKeyword(keyword) {\n            ga('set', 'campaignKeyword', keyword);\n          },\n\n\n          /**\n           * Campaign content\n           */\n          campaignContent: function campaignContent(content) {\n            ga('set', 'campaignContent', content);\n          },\n\n\n          /**\n           * Set user language\n           */\n          language: function language(_language) {\n            ga('set', 'language', _language);\n          },\n\n\n          /**\n           * Set document encoding\n           */\n          encoding: function encoding(_encoding) {\n            ga('set', 'encoding', _encoding);\n          },\n\n\n          /**\n           * Anonymize sender's IP address\n           */\n          anonymizeIp: function anonymizeIp(_anonymizeIp) {\n            ga('set', 'anonymizeIp', !!_anonymizeIp);\n          }\n        },\n\n        /**\n         * Tracking interface\n         */\n        track: {\n\n          /**\n           * Register a pageview\n           */\n          pageview: function pageview(page) {\n            ga('send', {\n              hitType: 'pageview',\n              page: page || $location.url()\n            });\n          },\n\n\n          /**\n           * Register a screenview\n           */\n          screenview: function screenview(screenName) {\n            ga('send', {\n              hitType: 'screenview',\n              screenName: screenName\n            });\n          },\n\n\n          /**\n           * Register an event\n           */\n          event: function event(category, action, label, value) {\n            ga('send', {\n              hitType: 'event',\n              eventCategory: category,\n              eventAction: action,\n              eventLabel: label,\n              eventValue: value\n            });\n          },\n\n\n          /**\n           * Register a social hit\n           */\n          social: function social(network, action, target) {\n            ga('send', {\n              hitType: 'social',\n              socialNetwork: network,\n              socialAction: action,\n              socialTarget: target\n            });\n          },\n\n\n          /**\n           * Register an exception\n           */\n          exception: function exception(description, isFatal) {\n            ga('send', {\n              hitType: 'exception',\n              exDescription: description,\n              exFatal: !!isFatal\n            });\n          },\n\n\n          /**\n           * Register a timing hit\n           */\n          timing: function timing(category, variable, value, label) {\n            ga('send', {\n              hitType: 'timing',\n              timingCategory: category,\n              timingVar: variable,\n              timingValue: value,\n              timingLabel: label\n            });\n          }\n        },\n\n        /**\n         * E-commerce interface\n         */\n        ecommerce: {\n\n          /**\n           * Add transaction\n           */\n          addTransaction: function addTransaction(id, affiliation, revenue, shipping, tax, currency) {\n            ga('ecommerce:addTransaction', {\n              id: id, affiliation: affiliation, revenue: revenue, shipping: shipping, tax: tax, currency: currency\n            });\n          },\n\n\n          /**\n           * Add item\n           */\n          addItem: function addItem(id, name, category, price, quantity, sku) {\n            ga('ecommerce:addItem', {\n              id: id, name: name, category: category, price: price, quantity: quantity, sku: sku\n            });\n          },\n\n\n          /**\n           * Send\n           */\n          send: function send() {\n            ga('ecommerce:send');\n          },\n\n\n          /**\n           * Clear\n           */\n          clear: function clear() {\n            ga('ecommerce:clear');\n          }\n        }\n      };\n\n      //Return\n      return Analytics;\n    }];\n  });\n})(window, window.angular);","(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Analytics.Service', [])\n\n/**\n * Provider definition\n */\n.provider('$analytics', function AnalyticsProvider() {\n\n  /**\n   * Enabled flag\n   */\n  this.isEnabled = true;\n\n  /**\n   * Set default data\n   */\n  this.setEnabled = function(isEnabled) {\n    this.isEnabled = !!isEnabled;\n  };\n\n  /**\n   * Service getter\n   */\n  this.$get = function($window, $location) {\n\n    //Check if enabled\n    let isEnabled = this.isEnabled;\n\n    /**\n     * Initialize google analytics queue\n     */\n    $window.ga = $window.ga || function() {\n      ($window.ga.q = $window.ga.q || []).push(arguments);\n    };\n    $window.ga.l = Number(new Date());\n\n    /**\n     * GA wrapper function\n     */\n    function ga() {\n      if (isEnabled) {\n        $window.ga.apply(undefined, arguments);\n      }\n    }\n\n    /**\n     * Class definition\n     */\n    let Analytics = {\n\n      /**\n       * Enable analytics in realtime\n       */\n      enable() {\n        isEnabled = true;\n      },\n\n      /**\n       * Disable analytics in realtime\n       */\n      disable() {\n        isEnabled = false;\n      },\n\n      /**\n       * Check if enabled\n       */\n      isEnabled() {\n        return isEnabled;\n      },\n\n      /**\n       * Create interface\n       */\n      create(trackingId, name, config) {\n        ga('create', angular.extend({\n          trackingId: trackingId,\n          cookieDomain: 'auto',\n          name: name,\n        }, config || {}));\n      },\n\n      /**\n       * Require interface\n       */\n      require(item) {\n        ga('require', item);\n      },\n\n      /**\n       * Set interface\n       */\n      set: {\n\n        /**\n         * Set app name\n         */\n        appName(name) {\n          ga('set', 'appName', name);\n        },\n\n        /**\n         * Set app ID\n         */\n        appId(id) {\n          ga('set', 'appId', id);\n        },\n\n        /**\n         * Set app version\n         */\n        appVersion(version) {\n          ga('set', 'appVersion', version);\n        },\n\n        /**\n         * Set user ID\n         */\n        userId(userId) {\n          ga('set', 'userId', userId);\n        },\n\n        /**\n         * Set data source\n         */\n        dataSource(dataSource) {\n          ga('set', 'dataSource', dataSource);\n        },\n\n        /**\n         * Set screen name\n         */\n        screenName(screenName) {\n          ga('set', 'screenName', screenName);\n        },\n\n        /**\n         * Set document title\n         */\n        documentTitle(title) {\n          ga('set', 'title', title);\n        },\n\n        /**\n         * Set hostname\n         */\n        hostname(hostname) {\n          ga('set', 'hostname', hostname);\n        },\n\n        /**\n         * Set page\n         */\n        page(page) {\n          page = page || $location.url();\n          ga('set', 'page', page);\n        },\n\n        /**\n         * Campaign name\n         */\n        campaignName(name) {\n          ga('set', 'campaignName', name);\n        },\n\n        /**\n         * Campaign ID\n         */\n        campaignId(id) {\n          ga('set', 'campaignId', id);\n        },\n\n        /**\n         * Campaign source\n         */\n        campaignSource(source) {\n          ga('set', 'campaignSource', source);\n        },\n\n        /**\n         * Campaign medium\n         */\n        campaignMedium(medium) {\n          ga('set', 'campaignMedium', medium);\n        },\n\n        /**\n         * Campaign keyword\n         */\n        campaignKeyword(keyword) {\n          ga('set', 'campaignKeyword', keyword);\n        },\n\n        /**\n         * Campaign content\n         */\n        campaignContent(content) {\n          ga('set', 'campaignContent', content);\n        },\n\n        /**\n         * Set user language\n         */\n        language(language) {\n          ga('set', 'language', language);\n        },\n\n        /**\n         * Set document encoding\n         */\n        encoding(encoding) {\n          ga('set', 'encoding', encoding);\n        },\n\n        /**\n         * Anonymize sender's IP address\n         */\n        anonymizeIp(anonymizeIp) {\n          ga('set', 'anonymizeIp', !!anonymizeIp);\n        },\n      },\n\n      /**\n       * Tracking interface\n       */\n      track: {\n\n        /**\n         * Register a pageview\n         */\n        pageview(page) {\n          ga('send', {\n            hitType: 'pageview',\n            page: page || $location.url(),\n          });\n        },\n\n        /**\n         * Register a screenview\n         */\n        screenview(screenName) {\n          ga('send', {\n            hitType: 'screenview',\n            screenName: screenName,\n          });\n        },\n\n        /**\n         * Register an event\n         */\n        event(category, action, label, value) {\n          ga('send', {\n            hitType: 'event',\n            eventCategory: category,\n            eventAction: action,\n            eventLabel: label,\n            eventValue: value,\n          });\n        },\n\n        /**\n         * Register a social hit\n         */\n        social(network, action, target) {\n          ga('send', {\n            hitType: 'social',\n            socialNetwork: network,\n            socialAction: action,\n            socialTarget: target,\n          });\n        },\n\n        /**\n         * Register an exception\n         */\n        exception(description, isFatal) {\n          ga('send', {\n            hitType: 'exception',\n            exDescription: description,\n            exFatal: !!isFatal,\n          });\n        },\n\n        /**\n         * Register a timing hit\n         */\n        timing(category, variable, value, label) {\n          ga('send', {\n            hitType: 'timing',\n            timingCategory: category,\n            timingVar: variable,\n            timingValue: value,\n            timingLabel: label,\n          });\n        },\n      },\n\n      /**\n       * E-commerce interface\n       */\n      ecommerce: {\n\n        /**\n         * Add transaction\n         */\n        addTransaction(id, affiliation, revenue, shipping, tax, currency) {\n          ga('ecommerce:addTransaction', {\n            id, affiliation, revenue, shipping, tax, currency,\n          });\n        },\n\n        /**\n         * Add item\n         */\n        addItem(id, name, category, price, quantity, sku) {\n          ga('ecommerce:addItem', {\n            id, name, category, price, quantity, sku,\n          });\n        },\n\n        /**\n         * Send\n         */\n        send() {\n          ga('ecommerce:send');\n        },\n\n        /**\n         * Clear\n         */\n        clear() {\n          ga('ecommerce:clear');\n        },\n      },\n    };\n\n    //Return\n    return Analytics;\n  };\n});\n\n})(window, window.angular);\n"]}